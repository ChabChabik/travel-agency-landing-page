*{-webkit-box-sizing:border-box;box-sizing:border-box}ul{background:green;list-style:none}body{font:22px/1.5 serif;background:url(../images/london.png) no-repeat/cover}.footer,.header{padding:100px 0;text-align:center}.header{background:gray!important;font-size:38px}.footer{border-color:red;font-size:32px}@supports (-webkit-appearance:none){body{background:url(../images/london.webp) no-repeat/cover}}@media (max-width:1200px){.header{font-size:32px}.footer{font-size:26px}}@media (max-width:700px){body{color:#fff;background-color:#000}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
